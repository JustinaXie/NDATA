load("/Users/justinatse/Desktop/2021Spring/Research/Pathway/Debug/Network.RData")
network<-ppi_inter
usethis::use_data(network)
document()
library(devtools)
document()
load("/Users/justinatse/Desktop/2021Spring/Research/Pathway/Debug/Gene.RData")
dnm<-dnm_sub
gene_dnm<-dnm_sub
usethis::use_data(gene_dnm)
document()
document()
View(dnm_sub)
View(dnm)
load("network.rda")#the adjacency from PPI database
getwd()
load("./data/gene_dnm.rda")#gene_dnm: gene name and mutability
load("./data/network.rda")#the adjacency from PPI database
source("./R/Main.R")
#Network information, w0: no network info, w1: degrees in the network, w2: equal weight
d<-colSums(network)
neighbors<-apply(network,1,function(x) which(x>0))
w0<-rep(0,length(d))
w1<-sqrt(d)
w2<-rep(0.5,length(d))
#Generate the true label of genes
Gibbs_prior<-Gibbs.trueParam(true_theta_0 = c(-4,0.02,0),nodesNeighbor = neighbors,
w=w1,mcmc_samples = 100,burnin = 50)
S<-Gibbs_prior$S
N<-5000
beta<-3.5
fdr_thresh<-0.05
mu<-gene_dnm$mut
P<-length(mu)
# Geneterate true gamma for each gene
gamma <- rep(1, P)
gamma[which(S[60,]==1)] <- rep(exp(beta),sum(S[60,]==1))
Y<-rpois(P, 2 * N * mu * gamma)
gene_dnm$Count<-Y
colnames(gene_dnm)<-c("Symbol","Mut","Count")
usethis::use_data(gene_dnm)
usethis::use_data(gene_dnm,overwrite = TRUE)
document()
rm(list = c("count.llk", "Get_Post_FDR", "Get_theta_0", "Get_theta_1_Anno", "Get_theta_1_Gamma", "Gibbs.post", "Gibbs.trueParam", "icm_randsearch", "icm_randsearch_theta0", "likpw", "MRF.condProb", "pseudo.llk"))
load_all()
document()
load_all()
#Network information, w0: no network info, w1: degrees in the network, w2: equal weight
d<-colSums(network)
network
data("network")
data("gene_dnm")
View(gene_dnm)
Y<-gene_dnm$Count
mu<-gene_dnm$Mut
P<-length(Y)
icm_res<-icm_randsearch(neighbors,w=w1,W=NULL,Y,X=rep(1,length(Y)),mu,N,ANNO = FALSE,
theta_0_init = c(-4,0,0),theta_1_init =2,threshold = 1e-4,initLabel = NULL)
neighbors<-apply(network,1,function(x) which(x>0))
icm_res<-icm_randsearch(neighbors,w=w1,W=NULL,Y,X=rep(1,length(Y)),mu,N,ANNO = FALSE,
theta_0_init = c(-4,0,0),theta_1_init =2,threshold = 1e-4,initLabel = NULL)
w1<-sqrt(d)
icm_res<-icm_randsearch(neighbors,w=w1,W=NULL,Y,X=rep(1,length(Y)),mu,N,ANNO = FALSE,
theta_0_init = c(-4,0,0),theta_1_init =2,threshold = 1e-4,initLabel = NULL)
N<-5000
icm_res<-icm_randsearch(neighbors,w=w1,W=NULL,Y,X=rep(1,length(Y)),mu,N,ANNO = FALSE,
theta_0_init = c(-4,0,0),theta_1_init =2,threshold = 1e-4,initLabel = NULL)
Gibbs<-Gibbs.post(icm_res$theta_0_est,icm_res$theta_1_est,neighbors,w=w1,W=NULL,
Y=Y,X=rep(1,length(Y)),mu,N,
mcmc_samples=500,burnin=200,thin=1,initLabel = icm_res$State)
plot(1:500,Gibbs$llk/P,type = "l")
q_0<-Gibbs$q_0
State_post<-Get_Post_FDR(dnm_sub$Gene_match,q_0)$FDR
sum(State_post[which(S[60,]==-1)]<0.05)/sum(State_post<0.05)
State_post<-Get_Post_FDR(gene_dnm$Symbol,,q_0)$FDR
State_post<-Get_Post_FDR(gene_dnm$Symbol,q_0)$FDR
sum(State_post[which(S[60,]==-1)]<0.05)/sum(State_post<0.05)
#Generate the true label of genes
Gibbs_prior<-Gibbs.trueParam(true_theta_0 = c(-4,0.02,0),nodesNeighbor = neighbors,
w=w1,mcmc_samples = 100,burnin = 50)
S<-Gibbs_prior$S
sum(State_post[which(S[60,]==-1)]<0.05)/sum(State_post<0.05)
sum(State_post[which(S[60,]==1)]<0.05)/sum((S[60,]==1))
View(gene_dnm)
View(Gibbs)
View(gene_dnm)
View(network)
document()
document()
document()
document()
test()
use_test()
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
test()
check()
document()
document()
document()
test()
usethis::test()
test()
